[
  {
    "__docId__": 0,
    "kind": "file",
    "name": "src/Confirm.jsx",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport { Action } from './actions';\n\nconst BaseConfirm = props =>\n  React.cloneElement(props.children, {\n    error: props.error,\n    onSubmit: props.onSubmit,\n    onResend: props.onResend,\n    onCancel: props.onCancel,\n  });\n\nconst confirm = (verificationCode, user, dispatch) => {\n  user.confirmRegistration(verificationCode, true, (error) => {\n    if (error) {\n      dispatch(Action.confirmFailed(user, error.message));\n    } else {\n      dispatch(Action.logout());\n    }\n  });\n};\n\nconst resend = (user, dispatch) =>\n  user.resendConfirmationCode((err) => {\n    if (err) {\n      dispatch(Action.confirmationRequired(user, err.message));\n    } else {\n      dispatch(Action.confirmationRequired(user, 'Confirmation code resent'));\n    }\n  });\n\nconst mapStateToProps = state => ({\n  error: state.cognito.error,\n  user: state.cognito.user,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  confirmPartial: (verificationCode, user) =>\n    confirm(verificationCode, user, dispatch),\n  onCancel: () => dispatch(Action.logout()),\n  onResendPartial: user => resend(user, dispatch),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, dispatchProps, {\n    onSubmit: verificationCode =>\n     dispatchProps.confirmPartial(verificationCode, stateProps.user),\n    onResend: () =>\n     dispatchProps.onResendPartial(stateProps.user),\n  });\n\n/**\n * Container for a confirmation form.  Magically adds the following props to the \n * contained form:\n *\n *  * user - the Cognito User from the redux store\n *  * error - the persisted error from the redux store\n *  * onSubmit - a handler that calls the Cognito confirm API\n *  * onResend - a handler that calls the Cognito resend request API\n *  * onCancel - Logs the user out completely\n *\n * @example\n * <Confirm>\n *   <ConfirmForm />\n * </Confirm>\n *\n */\nexport const Confirm = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BaseConfirm);\n",
    "static": true,
    "longname": "src/Confirm.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 1,
    "kind": "function",
    "name": "BaseConfirm",
    "memberof": "src/Confirm.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Confirm.jsx~BaseConfirm",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/Confirm.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 2,
    "kind": "function",
    "name": "confirm",
    "memberof": "src/Confirm.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Confirm.jsx~confirm",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/Confirm.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 13,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "verificationCode",
        "types": [
          "*"
        ]
      },
      {
        "name": "user",
        "types": [
          "*"
        ]
      },
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 3,
    "kind": "function",
    "name": "resend",
    "memberof": "src/Confirm.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Confirm.jsx~resend",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/Confirm.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 23,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "user",
        "types": [
          "*"
        ]
      },
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 4,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/Confirm.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Confirm.jsx~mapStateToProps",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/Confirm.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 5,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "src/Confirm.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Confirm.jsx~mapDispatchToProps",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/Confirm.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 37,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 6,
    "kind": "function",
    "name": "mergeProps",
    "memberof": "src/Confirm.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Confirm.jsx~mergeProps",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/Confirm.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 44,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "stateProps",
        "types": [
          "*"
        ]
      },
      {
        "name": "dispatchProps",
        "types": [
          "*"
        ]
      },
      {
        "name": "ownProps",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 7,
    "kind": "variable",
    "name": "Confirm",
    "memberof": "src/Confirm.jsx",
    "static": true,
    "longname": "src/Confirm.jsx~Confirm",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/Confirm.jsx",
    "importStyle": "{Confirm}",
    "description": "Container for a confirmation form.  Magically adds the following props to the \ncontained form:\n\n * user - the Cognito User from the redux store\n * error - the persisted error from the redux store\n * onSubmit - a handler that calls the Cognito confirm API\n * onResend - a handler that calls the Cognito resend request API\n * onCancel - Logs the user out completely",
    "examples": [
      "<Confirm>\n  <ConfirmForm />\n</Confirm>"
    ],
    "lineNumber": 68,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 8,
    "kind": "file",
    "name": "src/EmailVerification.jsx",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport { Action } from './actions';\n\nconst BaseEmailVerification = props =>\n  React.cloneElement(props.children, {\n    error: props.error,\n    onSubmit: props.onSubmit,\n    onCancel: props.onCancel,\n  });\n\nconst verifyEmail = (verificationCode, user, dispatch) =>\n  user.verifyAttribute('email', verificationCode, {\n    onSuccess: () => dispatch(Action.login(user)),\n    inputVerificationCode: () => dispatch(Action.emailVerificationRequired(user)),\n    onFailure: error => dispatch(Action.emailVerificationFailed(user, error.message)),\n  });\n\nconst mapStateToProps = state => ({\n  error: state.cognito.error,\n  user: state.cognito.user,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  verifyPartial: (verificationCode, user) =>\n    verifyEmail(verificationCode, user, dispatch),\n  onCancel: () => dispatch(Action.logout()),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, dispatchProps, {\n    onSubmit: verificationCode =>\n     dispatchProps.verifyPartial(verificationCode, stateProps.user),\n  });\n\n/**\n * Wrapper for an Email Verification Form.\n * Magically adds the following props to the contained form:\n *\n *  * user - the Cognito user from the Redux store\n *  * error - the persisted error from the Redux store\n *  * onSubmit - a handler that calls the Cognito verification API\n *\n * @example\n * <EmailVerification>\n *   <EmailVerificationForm />\n * </EmailVerification>\n *\n */\nexport const EmailVerification = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BaseEmailVerification);\n",
    "static": true,
    "longname": "src/EmailVerification.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 9,
    "kind": "function",
    "name": "BaseEmailVerification",
    "memberof": "src/EmailVerification.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/EmailVerification.jsx~BaseEmailVerification",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/EmailVerification.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 10,
    "kind": "function",
    "name": "verifyEmail",
    "memberof": "src/EmailVerification.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/EmailVerification.jsx~verifyEmail",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/EmailVerification.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "verificationCode",
        "types": [
          "*"
        ]
      },
      {
        "name": "user",
        "types": [
          "*"
        ]
      },
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 11,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/EmailVerification.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/EmailVerification.jsx~mapStateToProps",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/EmailVerification.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 12,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "src/EmailVerification.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/EmailVerification.jsx~mapDispatchToProps",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/EmailVerification.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 24,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 13,
    "kind": "function",
    "name": "mergeProps",
    "memberof": "src/EmailVerification.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/EmailVerification.jsx~mergeProps",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/EmailVerification.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "stateProps",
        "types": [
          "*"
        ]
      },
      {
        "name": "dispatchProps",
        "types": [
          "*"
        ]
      },
      {
        "name": "ownProps",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 14,
    "kind": "variable",
    "name": "EmailVerification",
    "memberof": "src/EmailVerification.jsx",
    "static": true,
    "longname": "src/EmailVerification.jsx~EmailVerification",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/EmailVerification.jsx",
    "importStyle": "{EmailVerification}",
    "description": "Wrapper for an Email Verification Form.\nMagically adds the following props to the contained form:\n\n * user - the Cognito user from the Redux store\n * error - the persisted error from the Redux store\n * onSubmit - a handler that calls the Cognito verification API",
    "examples": [
      "<EmailVerification>\n  <EmailVerificationForm />\n</EmailVerification>"
    ],
    "lineNumber": 50,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 15,
    "kind": "file",
    "name": "src/Login.jsx",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport { authenticate } from './auth';\n\nconst BaseLogin = props =>\n  React.cloneElement(props.children, {\n    username: props.username,\n    error: props.error,\n    onSubmit: props.onSubmit,\n  });\n\nconst mapStateToProps = (state) => {\n  let username = '';\n  if (state.cognito.user) {\n    username = state.cognito.user.getUsername();\n  }\n  return {\n    username,\n    error: state.cognito.error,\n    config: state.cognito.config,\n    userPool: state.cognito.userPool,\n  };\n};\n\nconst mapDispatchToProps = dispatch => ({\n  authenticator: (username, password, userPool, config) => {\n    authenticate(username, password, userPool, config).then(dispatch);\n  },\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, {\n    onSubmit: (username, password) =>\n      dispatchProps.authenticator(username, password, stateProps.userPool, stateProps.config),\n  });\n\n/**\n * Container for login behaviour, wrapping a login form.\n *\n * Magically provides the following props to the wrapped form:\n *\n *  * username\n *  * error\n *  * onSubmit\n *\n * @example\n * <Login>\n *   <LoginForm />\n * </Login>\n */\nconst Login = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BaseLogin);\n\nexport { Login };\n",
    "static": true,
    "longname": "src/Login.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 16,
    "kind": "function",
    "name": "BaseLogin",
    "memberof": "src/Login.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Login.jsx~BaseLogin",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/Login.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 17,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/Login.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Login.jsx~mapStateToProps",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/Login.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "{\"username\": *, \"error\": *, \"config\": *, \"userPool\": *}"
      ]
    }
  },
  {
    "__docId__": 18,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "src/Login.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Login.jsx~mapDispatchToProps",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/Login.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 19,
    "kind": "function",
    "name": "mergeProps",
    "memberof": "src/Login.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/Login.jsx~mergeProps",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/Login.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 31,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "stateProps",
        "types": [
          "*"
        ]
      },
      {
        "name": "dispatchProps",
        "types": [
          "*"
        ]
      },
      {
        "name": "ownProps",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 20,
    "kind": "variable",
    "name": "Login",
    "memberof": "src/Login.jsx",
    "static": true,
    "longname": "src/Login.jsx~Login",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/Login.jsx",
    "importStyle": "{Login}",
    "description": "Container for login behaviour, wrapping a login form.\n\nMagically provides the following props to the wrapped form:\n\n * username\n * error\n * onSubmit",
    "examples": [
      "<Login>\n  <LoginForm />\n</Login>"
    ],
    "lineNumber": 51,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 21,
    "kind": "file",
    "name": "src/Logout.jsx",
    "content": "import React, { PropTypes } from 'react';\nimport { Action } from './actions';\n\n/**\n * Container for logout behaviour.\n * @example\n * <Logout onLogout={handler}>\n *   <LogoutForm />\n * </Logout>\n */\nexport class Logout extends React.Component {\n\n  /**\n   * Passed to child element as onClick prop.\n   * Signs the user out, and then dispatches the logout action\n   * If you want to take further actions (like reloading UI) then add an\n   * onLogout property to the Logout element\n   */\n  onClick = (event) => {\n    const { store } = this.context;\n    const state = store.getState();\n    state.cognito.user.signOut();\n    event.preventDefault();\n    store.dispatch(Action.logout());\n    this.props.onLogout();\n  }\n\n  /**\n   * renders the child element, adding an onClick property\n   */\n  render() {\n    return React.cloneElement(this.props.children, {\n      onClick: this.onClick,\n    });\n  }\n}\nLogout.contextTypes = {\n  store: PropTypes.object,\n};\nLogout.propTypes = {\n  children: React.PropTypes.any.isRequired,\n  onLogout: React.PropTypes.func,\n};\nLogout.defaultProps = {\n  onLogout: () => {},\n};\n\n",
    "static": true,
    "longname": "src/Logout.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 22,
    "kind": "class",
    "name": "Logout",
    "memberof": "src/Logout.jsx",
    "static": true,
    "longname": "src/Logout.jsx~Logout",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/Logout.jsx",
    "importStyle": "{Logout}",
    "description": "Container for logout behaviour.",
    "examples": [
      "<Logout onLogout={handler}>\n  <LogoutForm />\n</Logout>"
    ],
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "react~React.Component"
    ]
  },
  {
    "__docId__": 23,
    "kind": "member",
    "name": "onClick",
    "memberof": "src/Logout.jsx~Logout",
    "static": false,
    "longname": "src/Logout.jsx~Logout#onClick",
    "access": null,
    "description": "Passed to child element as onClick prop.\nSigns the user out, and then dispatches the logout action\nIf you want to take further actions (like reloading UI) then add an\nonLogout property to the Logout element",
    "lineNumber": 19,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 24,
    "kind": "method",
    "name": "render",
    "memberof": "src/Logout.jsx~Logout",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/Logout.jsx~Logout#render",
    "access": null,
    "description": "renders the child element, adding an onClick property",
    "lineNumber": 31,
    "params": [],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 25,
    "kind": "file",
    "name": "src/NewPasswordRequired.jsx",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport { Action } from './actions';\n\nconst BaseNewPasswordRequired = props =>\n  React.cloneElement(props.children, {\n    error: props.error,\n    onSubmit: props.onSubmit,\n  });\n\nconst setNewPassword = (password, user, config, userAttributes, dispatch) =>\n  user.completeNewPasswordChallenge(password, userAttributes, {\n    onSuccess: () => dispatch(Action.authenticated(user)),\n    onFailure: error => dispatch(Action.newPasswordRequiredFailure(user, error.message)),\n    mfaRequired: () => dispatch(Action.mfaRequired(user)),\n    newPasswordRequired: () => dispatch(Action.newPasswordRequired(user)),\n  });\n\nconst mapStateToProps = state => ({\n  error: state.cognito.error,\n  user: state.cognito.user,\n  config: state.cognito.config,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  setNewPasswordPartial: (password, user, config, userAttributes) =>\n    setNewPassword(password, user, config, userAttributes, dispatch),\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, {\n    onSubmit: (password, userAttributes) =>\n     dispatchProps.setNewPasswordPartial(\n      password,\n      stateProps.user,\n      stateProps.config,\n      userAttributes),\n  });\n\n/**\n * Wrapper for a New Password Required form\n *\n * Magically provides the following props to the wrapped element:\n *\n * * user - the Cognito user\n * * error - the persistent react-cognito error message\n * * onSubmit - a handler that calls the Set New Password API\n *\n * @example\n *\n * <NewPasswordRequired>\n *   <NewPasswordRequiredForm />\n * </NewPasswordRequired>\n */\nexport const NewPasswordRequired = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BaseNewPasswordRequired);\n",
    "static": true,
    "longname": "src/NewPasswordRequired.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 26,
    "kind": "function",
    "name": "BaseNewPasswordRequired",
    "memberof": "src/NewPasswordRequired.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NewPasswordRequired.jsx~BaseNewPasswordRequired",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/NewPasswordRequired.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 5,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 27,
    "kind": "function",
    "name": "setNewPassword",
    "memberof": "src/NewPasswordRequired.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NewPasswordRequired.jsx~setNewPassword",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/NewPasswordRequired.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 11,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "password",
        "types": [
          "*"
        ]
      },
      {
        "name": "user",
        "types": [
          "*"
        ]
      },
      {
        "name": "config",
        "types": [
          "*"
        ]
      },
      {
        "name": "userAttributes",
        "types": [
          "*"
        ]
      },
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 28,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/NewPasswordRequired.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NewPasswordRequired.jsx~mapStateToProps",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/NewPasswordRequired.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 19,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 29,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "src/NewPasswordRequired.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NewPasswordRequired.jsx~mapDispatchToProps",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/NewPasswordRequired.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 25,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 30,
    "kind": "function",
    "name": "mergeProps",
    "memberof": "src/NewPasswordRequired.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/NewPasswordRequired.jsx~mergeProps",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/NewPasswordRequired.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 30,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "stateProps",
        "types": [
          "*"
        ]
      },
      {
        "name": "dispatchProps",
        "types": [
          "*"
        ]
      },
      {
        "name": "ownProps",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 31,
    "kind": "variable",
    "name": "NewPasswordRequired",
    "memberof": "src/NewPasswordRequired.jsx",
    "static": true,
    "longname": "src/NewPasswordRequired.jsx~NewPasswordRequired",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/NewPasswordRequired.jsx",
    "importStyle": "{NewPasswordRequired}",
    "description": "Wrapper for a New Password Required form\n\nMagically provides the following props to the wrapped element:\n\n* user - the Cognito user\n* error - the persistent react-cognito error message\n* onSubmit - a handler that calls the Set New Password API",
    "examples": [
      "\n<NewPasswordRequired>\n  <NewPasswordRequiredForm />\n</NewPasswordRequired>"
    ],
    "lineNumber": 55,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 32,
    "kind": "file",
    "name": "src/PasswordReset.jsx",
    "content": "import React from 'react';\nimport { connect } from 'react-redux';\nimport { CognitoUser } from 'amazon-cognito-identity-js';\nimport { Action } from './actions';\n\nconst BasePasswordReset = props =>\n  React.cloneElement(props.children, {\n    error: props.error,\n    username: props.username,\n    sendVerificationCode: props.sendVerificationCode,\n    setPassword: props.setPassword,\n  });\n\nconst getUser = (username, userPool) => {\n  const user = new CognitoUser({\n    Username: username,\n    Pool: userPool,\n  });\n  return user;\n};\n\nconst setPassword = (username, userPool, code, password) =>\n  new Promise((resolve) => {\n    const user = getUser(username, userPool);\n    user.confirmPassword(code, password, {\n      onSuccess: () => resolve(Action.finishPasswordResetFlow('Password reset')),\n      onFailure: err => resolve(Action.beginPasswordResetFlow(user, err.message)),\n    });\n  });\n\n\nconst sendVerificationCode = (username, userPool) =>\n  new Promise((resolve) => {\n    const user = getUser(username, userPool);\n    user.forgotPassword({\n      onSuccess: () => resolve(Action.beginPasswordResetFlow(user, 'Verification code sent')),\n      onFailure: err => resolve(Action.beginPasswordResetFlow(user, err.message)),\n    });\n  });\n\n\nconst mapStateToProps = (state) => {\n  const props = {\n    error: state.cognito.error || '',\n    user: state.cognito.user,\n    username: '',\n    userPool: state.cognito.userPool,\n  };\n  if (state.cognito.user != null) {\n    props.username = state.cognito.user.getUsername();\n  }\n  return props;\n};\n\nconst mapDispatchToProps = dispatch => ({\n  sendVerificationCodePartial: (username, userPool) => {\n    sendVerificationCode(username, userPool).then(dispatch);\n  },\n  setPasswordPartial: (user, userPool, code, password) => {\n    setPassword(user, userPool, code, password).then(dispatch);\n  },\n});\n\nconst mergeProps = (stateProps, dispatchProps, ownProps) =>\n  Object.assign({}, ownProps, stateProps, {\n    sendVerificationCode: username =>\n      dispatchProps.sendVerificationCodePartial(username, stateProps.userPool),\n    setPassword: (username, code, password) =>\n      dispatchProps.setPasswordPartial(username, stateProps.userPool, code, password),\n  });\n\n/**\n * Container for a Password Reset form\n *\n * Magically provides the following props to the wrapped element:\n *\n *  * user\n *  * username\n *  * error\n *  * sendVerificationCode\n *  * setPassword\n *\n * @example\n * <PasswordReset>\n *   <PasswordResetForm />\n * </PasswordReset>\n */\nexport const PasswordReset = connect(\n  mapStateToProps,\n  mapDispatchToProps,\n  mergeProps,\n)(BasePasswordReset);\n",
    "static": true,
    "longname": "src/PasswordReset.jsx",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 33,
    "kind": "function",
    "name": "BasePasswordReset",
    "memberof": "src/PasswordReset.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/PasswordReset.jsx~BasePasswordReset",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/PasswordReset.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "props",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 34,
    "kind": "function",
    "name": "getUser",
    "memberof": "src/PasswordReset.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/PasswordReset.jsx~getUser",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/PasswordReset.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 14,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "username",
        "types": [
          "*"
        ]
      },
      {
        "name": "userPool",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 35,
    "kind": "function",
    "name": "setPassword",
    "memberof": "src/PasswordReset.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/PasswordReset.jsx~setPassword",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/PasswordReset.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 22,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "username",
        "types": [
          "*"
        ]
      },
      {
        "name": "userPool",
        "types": [
          "*"
        ]
      },
      {
        "name": "code",
        "types": [
          "*"
        ]
      },
      {
        "name": "password",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 36,
    "kind": "function",
    "name": "sendVerificationCode",
    "memberof": "src/PasswordReset.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/PasswordReset.jsx~sendVerificationCode",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/PasswordReset.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 32,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "username",
        "types": [
          "*"
        ]
      },
      {
        "name": "userPool",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 37,
    "kind": "function",
    "name": "mapStateToProps",
    "memberof": "src/PasswordReset.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/PasswordReset.jsx~mapStateToProps",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/PasswordReset.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 42,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 38,
    "kind": "function",
    "name": "mapDispatchToProps",
    "memberof": "src/PasswordReset.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/PasswordReset.jsx~mapDispatchToProps",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/PasswordReset.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 55,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "dispatch",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 39,
    "kind": "function",
    "name": "mergeProps",
    "memberof": "src/PasswordReset.jsx",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/PasswordReset.jsx~mergeProps",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/PasswordReset.jsx",
    "importStyle": null,
    "description": null,
    "lineNumber": 64,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "stateProps",
        "types": [
          "*"
        ]
      },
      {
        "name": "dispatchProps",
        "types": [
          "*"
        ]
      },
      {
        "name": "ownProps",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 40,
    "kind": "variable",
    "name": "PasswordReset",
    "memberof": "src/PasswordReset.jsx",
    "static": true,
    "longname": "src/PasswordReset.jsx~PasswordReset",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/PasswordReset.jsx",
    "importStyle": "{PasswordReset}",
    "description": "Container for a Password Reset form\n\nMagically provides the following props to the wrapped element:\n\n * user\n * username\n * error\n * sendVerificationCode\n * setPassword",
    "examples": [
      "<PasswordReset>\n  <PasswordResetForm />\n</PasswordReset>"
    ],
    "lineNumber": 88,
    "type": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 41,
    "kind": "file",
    "name": "src/actions.js",
    "content": "/**\n * container for all the actions\n*/\nconst Action = {\n\n  configure: config => ({\n    type: 'COGNITO_CONFIGURE',\n    config,\n  }),\n\n  authenticated: user => ({\n    type: 'COGNITO_AUTHENTICATED',\n    user,\n  }),\n\n  loggingIn: attributes => ({\n    type: 'COGNITO_LOGGING_IN',\n    attributes,\n  }),\n\n  login: creds => ({\n    type: 'COGNITO_LOGIN',\n    creds,\n  }),\n\n  logout: () => ({\n    type: 'COGNITO_LOGOUT',\n  }),\n\n  loginFailure: (user, error) => ({\n    type: 'COGNITO_LOGIN_FAILURE',\n    user,\n    error,\n  }),\n\n  mfaRequired: user => ({\n    type: 'COGNITO_LOGIN_MFA_REQUIRED',\n    user,\n  }),\n\n  newPasswordRequired: user => ({\n    type: 'COGNITO_LOGIN_NEW_PASSWORD_REQUIRED',\n    user,\n  }),\n\n  newPasswordRequiredFailure: (user, error) => ({\n    type: 'COGNITO_NEW_PASSWORD_REQUIRED_FAILURE',\n    user,\n    error,\n  }),\n\n  emailVerificationRequired: attributes => ({\n    type: 'COGNITO_EMAIL_VERIFICATION_REQUIRED',\n    attributes,\n  }),\n\n  emailVerificationFailed: (error, attributes) => ({\n    type: 'COGNITO_EMAIL_VERIFICATION_FAILED',\n    error,\n    attributes,\n  }),\n\n  beginPasswordResetFlow: (user, error) => ({\n    type: 'COGNITO_BEGIN_PASSWORD_RESET_FLOW',\n    user,\n    error,\n  }),\n\n  finishPasswordResetFlow: error => ({\n    type: 'COGNITO_FINISH_PASSWORD_RESET_FLOW',\n    error,\n  }),\n\n  updateAttributes: attributes => ({\n    type: 'COGNITO_UPDATE_USER_ATTRIBUTES',\n    attributes,\n  }),\n\n  confirmationRequired: (user, error) => ({\n    type: 'COGNITO_USER_UNCONFIRMED',\n    user,\n    error,\n  }),\n\n};\n\nexport { Action };\n",
    "static": true,
    "longname": "src/actions.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 42,
    "kind": "variable",
    "name": "Action",
    "memberof": "src/actions.js",
    "static": true,
    "longname": "src/actions.js~Action",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/actions.js",
    "importStyle": "{Action}",
    "description": "container for all the actions",
    "lineNumber": 4,
    "type": {
      "types": [
        "{\"configure\": *, \"authenticated\": *, \"loggingIn\": *, \"login\": *, \"logout\": *, \"loginFailure\": *, \"mfaRequired\": *, \"newPasswordRequired\": *, \"newPasswordRequiredFailure\": *, \"emailVerificationRequired\": *, \"emailVerificationFailed\": *, \"beginPasswordResetFlow\": *, \"finishPasswordResetFlow\": *, \"updateAttributes\": *, \"confirmationRequired\": *}"
      ]
    }
  },
  {
    "__docId__": 43,
    "kind": "file",
    "name": "src/attributes.js",
    "content": "\nimport { Action } from './actions';\n\n/**\n * Request that a verification code is sent by email or SMS to verify\n * an attribute\n * @param {object} user - the cognito user object\n * @param {string} attribute - the attribute name\n*/\nconst sendAttributeVerificationCode = (user, attribute) =>\n  new Promise((resolve, reject) => {\n    user.getAttributeVerificationCode(attribute, {\n      onSuccess: () => resolve(false),\n      inputVerificationCode: () => resolve(true),\n      onFailure: error => reject(error.message),\n    });\n  });\n\n/**\n * Fetches the user attributes from Cognito, and turns them into\n * an object\n * @param {object} user - the cognito user object\n * @returns {Promise} resolves with the attributes or rejects with an error message\n*/\nconst getUserAttributes = user =>\n  new Promise((resolve, reject) =>\n    user.getUserAttributes((error, result) => {\n      if (error) {\n        reject(error.message);\n      } else {\n        const attributes = {};\n        for (let i = 0; i < result.length; i += 1) {\n          const name = result[i].getName();\n          const value = result[i].getValue();\n          attributes[name] = value;\n        }\n        resolve(attributes);\n      }\n    }),\n  );\n\n/**\n * convert an attribute dictionary to an attribute list\n * @param {object} attributes - a dictionary of attributes\n * @return {array} AWS expected attribute list\n*/\nconst mkAttrList = attributes =>\n  Object.keys(attributes).map(key => ({\n    Name: key,\n    Value: attributes[key],\n  }));\n\n/**\n * update the attributes in Cognito\n * @param {object} user - the CognitoUser object\n * @param {object} attributes - an attributes dictionary with the attributes to be updated\n * @return {Promise<object>} a promise that resolves to a redux action\n*/\nconst updateAttributes = (user, attributes) =>\n  new Promise((resolve, reject) => {\n    const attributeList = mkAttrList(attributes);\n    user.updateAttributes(attributeList, (err) => {\n      if (err) {\n        reject(err.message);\n      } else {\n        resolve(Action.updateAttributes(attributes));\n      }\n    });\n  });\n\nexport {\n  sendAttributeVerificationCode,\n  getUserAttributes,\n  updateAttributes,\n  mkAttrList,\n};\n",
    "static": true,
    "longname": "src/attributes.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 44,
    "kind": "function",
    "name": "sendAttributeVerificationCode",
    "memberof": "src/attributes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/attributes.js~sendAttributeVerificationCode",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/attributes.js",
    "importStyle": "{sendAttributeVerificationCode}",
    "description": "Request that a verification code is sent by email or SMS to verify\nan attribute",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "the cognito user object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "attribute",
        "description": "the attribute name"
      }
    ]
  },
  {
    "__docId__": 45,
    "kind": "function",
    "name": "getUserAttributes",
    "memberof": "src/attributes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/attributes.js~getUserAttributes",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/attributes.js",
    "importStyle": "{getUserAttributes}",
    "description": "Fetches the user attributes from Cognito, and turns them into\nan object",
    "lineNumber": 25,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{Promise} resolves with the attributes or rejects with an error message"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "the cognito user object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "resolves with the attributes or rejects with an error message"
    }
  },
  {
    "__docId__": 46,
    "kind": "function",
    "name": "updateAttributes",
    "memberof": "src/attributes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/attributes.js~updateAttributes",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/attributes.js",
    "importStyle": "{updateAttributes}",
    "description": "update the attributes in Cognito",
    "lineNumber": 59,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "the CognitoUser object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "attributes",
        "description": "an attributes dictionary with the attributes to be updated"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "a promise that resolves to a redux action"
    }
  },
  {
    "__docId__": 47,
    "kind": "function",
    "name": "mkAttrList",
    "memberof": "src/attributes.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/attributes.js~mkAttrList",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/attributes.js",
    "importStyle": "{mkAttrList}",
    "description": "convert an attribute dictionary to an attribute list",
    "lineNumber": 47,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "attributes",
        "description": "a dictionary of attributes"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "array"
      ],
      "spread": false,
      "description": "AWS expected attribute list"
    }
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/auth.js",
    "content": "import { CognitoUser, AuthenticationDetails } from 'amazon-cognito-identity-js';\nimport { CognitoIdentityCredentials } from 'aws-cognito-sdk';\nimport { Action } from './actions';\nimport { mkAttrList, sendAttributeVerificationCode } from './attributes';\nimport { buildLogins } from './utils';\n\n/**\n * sends the email verification code and transitions to the correct state\n * @param {object} user - the CognitoUser object\n * @param {object} attributes - the attributes dictionary\n * @return {Promise<object>} a promise that resolves to a redux action\n*/\nconst emailVerificationFlow = (user, attributes) =>\n  new Promise(resolve =>\n    sendAttributeVerificationCode(user, 'email').then((required) => {\n      if (required) {\n        resolve(Action.emailVerificationRequired(attributes));\n      } else {\n        // dead end?\n        resolve(Action.loggingIn(attributes));\n      }\n    }, (error) => {\n      // some odd classes of error here\n      resolve(Action.emailVerificationFailed(error, attributes));\n    }));\n\n/**\n * logs in to the federated identity pool with a JWT\n * @param {string} username - the username\n * @param {string} jwtToken - a token from the session\n * @param {object} config - the react-cognito config\n * @return {Promise<object>} a promise that resolves to the federated identity credentials\n*/\nconst refreshIdentityCredentials = (username, jwtToken, config) =>\n  new Promise((resolve, reject) => {\n    const logins = buildLogins(username, jwtToken, config);\n    const creds = new CognitoIdentityCredentials(logins);\n    creds.refresh((error) => {\n      if (error) {\n        reject(error.message);\n      } else {\n        resolve(creds);\n      }\n    });\n  });\n\n/**\n * establishes a session with the user pool, and logs into the federated identity\n * pool using a token from the session\n * @param {object} user - the CognitoUser object\n * @param {object} config -the react-cognito config\n * @return {Promise<object>} an action to be dispatched\n*/\nconst performLogin = (user, config) =>\n  new Promise((resolve, reject) => {\n    if (user != null) {\n      user.getSession((err, session) => {\n        if (err) {\n          resolve(Action.loginFailure(user, err.message));\n        } else {\n          const jwtToken = session.getIdToken().getJwtToken();\n          const username = user.getUsername();\n          refreshIdentityCredentials(username, jwtToken, config).then(\n            creds => resolve(Action.login(creds)),\n            message => resolve(Action.loginFailure(user, message)));\n        }\n      });\n    } else {\n      reject('user is null');\n    }\n  });\n\n/**\n *\n * Authenticates with a user pool, and handles responses.\n * if the authentication is successful it then logs in to the\n * identity pool.\n *\n * returns an action depending on the outcome.  Possible actions returned\n * are:\n *\n * - login - valid user who is logged in\n * - loginFailure - failed to authenticate with user pool or identity pool\n * - mfaRequired - user now needs to enter MFA\n * - newPasswordRequired - user must change password on first login\n * - emailVerificationRequired - user must verify their email address\n * - emailVerificationFailed - email verification is required, but won't work\n *\n * Dispatch the resulting action, e.g.:\n *\n * ```\n * const { userPool, config } = state.cognito;\n * authenticate(username, password, userPool, config).then(dispatch);\n * ```\n *\n * @param {string} username - the username provided by the user\n * @param {string} password - the password provided by the user\n * @param {object} userPool - a Cognito User Pool object\n * @return {Promise<object>} - a promise that resolves an action to be dispatched\n *\n*/\nconst authenticate = (username, password, userPool) =>\n  new Promise((resolve) => {\n    const creds = new AuthenticationDetails({\n      Username: username,\n      Password: password,\n    });\n\n    const user = new CognitoUser({\n      Username: username,\n      Pool: userPool,\n    });\n\n    user.authenticateUser(creds, {\n      onSuccess: () => resolve(Action.authenticated(user)),\n      onFailure: (error) => {\n        if (error.code === 'UserNotConfirmedException') {\n          resolve(Action.confirmationRequired(user));\n        } else {\n          resolve(Action.loginFailure(user, error.message));\n        }\n      },\n      mfaRequired: () => resolve(Action.mfaRequired(user)),\n      newPasswordRequired: () => resolve(Action.newPasswordRequired(user)),\n    });\n  });\n\n/**\n * sign up this user with the user pool provided\n * @param {object} userPool - a Cognito userpool (e.g. state.cognito.userPool)\n * @param {object} config - the react-cognito config object\n * @param {string} username - the username\n * @param {string} password - the password\n * @param {object} attributes - an attributes dictionary\n * @return {Promise<object>} a promise that resolves a redux action\n*/\nconst registerUser = (userPool, config, username, password, attributes) =>\n  new Promise((resolve, reject) =>\n    userPool.signUp(username, password, mkAttrList(attributes), null, (err, result) => {\n      if (err) {\n        reject(err.message);\n      } else if (result.userConfirmed === false) {\n        resolve(Action.confirmationRequired(result.user));\n      } else {\n        resolve(authenticate(username, password, userPool));\n      }\n    }));\n\n\nexport {\n  authenticate,\n  performLogin,\n  registerUser,\n  emailVerificationFlow,\n};\n",
    "static": true,
    "longname": "src/auth.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "function",
    "name": "refreshIdentityCredentials",
    "memberof": "src/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/auth.js~refreshIdentityCredentials",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/auth.js",
    "importStyle": null,
    "description": "logs in to the federated identity pool with a JWT",
    "lineNumber": 34,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "username",
        "description": "the username"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "jwtToken",
        "description": "a token from the session"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "the react-cognito config"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "a promise that resolves to the federated identity credentials"
    }
  },
  {
    "__docId__": 50,
    "kind": "function",
    "name": "authenticate",
    "memberof": "src/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/auth.js~authenticate",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/auth.js",
    "importStyle": "{authenticate}",
    "description": "\nAuthenticates with a user pool, and handles responses.\nif the authentication is successful it then logs in to the\nidentity pool.\n\nreturns an action depending on the outcome.  Possible actions returned\nare:\n\n- login - valid user who is logged in\n- loginFailure - failed to authenticate with user pool or identity pool\n- mfaRequired - user now needs to enter MFA\n- newPasswordRequired - user must change password on first login\n- emailVerificationRequired - user must verify their email address\n- emailVerificationFailed - email verification is required, but won't work\n\nDispatch the resulting action, e.g.:\n\n```\nconst { userPool, config } = state.cognito;\nauthenticate(username, password, userPool, config).then(dispatch);\n```",
    "lineNumber": 102,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "username",
        "description": "the username provided by the user"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": "the password provided by the user"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "userPool",
        "description": "a Cognito User Pool object"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "a promise that resolves an action to be dispatched"
    }
  },
  {
    "__docId__": 51,
    "kind": "function",
    "name": "performLogin",
    "memberof": "src/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/auth.js~performLogin",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/auth.js",
    "importStyle": "{performLogin}",
    "description": "establishes a session with the user pool, and logs into the federated identity\npool using a token from the session",
    "lineNumber": 54,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "the CognitoUser object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "the react-cognito config"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "an action to be dispatched"
    }
  },
  {
    "__docId__": 52,
    "kind": "function",
    "name": "registerUser",
    "memberof": "src/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/auth.js~registerUser",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/auth.js",
    "importStyle": "{registerUser}",
    "description": "sign up this user with the user pool provided",
    "lineNumber": 137,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "userPool",
        "description": "a Cognito userpool (e.g. state.cognito.userPool)"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "the react-cognito config object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "username",
        "description": "the username"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "password",
        "description": "the password"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "attributes",
        "description": "an attributes dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "a promise that resolves a redux action"
    }
  },
  {
    "__docId__": 53,
    "kind": "function",
    "name": "emailVerificationFlow",
    "memberof": "src/auth.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/auth.js~emailVerificationFlow",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/auth.js",
    "importStyle": "{emailVerificationFlow}",
    "description": "sends the email verification code and transitions to the correct state",
    "lineNumber": 13,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "the CognitoUser object"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "attributes",
        "description": "the attributes dictionary"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<object>"
      ],
      "spread": false,
      "description": "a promise that resolves to a redux action"
    }
  },
  {
    "__docId__": 54,
    "kind": "file",
    "name": "src/guard.js",
    "content": "\n/*\n Default behaviour is to restrict access to only logged in users\n*/\n\nconst testLoggedIn = (state, wantLoggedIn) => {\n  const isLoggedIn = state.cognito.user !== null;\n  if (isLoggedIn && wantLoggedIn) {\n    return true;\n  }\n  if (!isLoggedIn && !wantLoggedIn) {\n    return true;\n  }\n  return false;\n};\n\nconst permitted = (state, expr) =>\n  new Promise((resolve) => {\n    if (expr.loggedIn !== undefined) {\n      resolve(testLoggedIn(state, expr.loggedIn));\n    } else {\n      resolve(testLoggedIn(state, true));\n    }\n  });\n\nconst guard = (store, forbiddenUrl, expr = {}, routeState, replace, callback) => {\n  const state = store.getState();\n  let dest = forbiddenUrl;\n\n  if (expr.forbiddenUrl !== undefined) {\n    dest = expr.forbiddenUrl;\n  }\n  permitted(state, expr).then((allow) => {\n    if (!allow) {\n      replace(dest);\n    }\n    callback();\n  });\n};\n\n/**\n * creates a guard function you can use in <Route> tags\n * @param {object} store - the redux store\n * @param {string} forbiddenUrl - the default url to navigate to if forbidden\n * @returns {function} - a function that can be provided to onEnter\n*/\nconst createGuard = (store, forbiddenUrl) => expr => (state, replace, callback) =>\n  guard(store, forbiddenUrl, expr, state, replace, callback);\n\n\nexport { createGuard };\n",
    "static": true,
    "longname": "src/guard.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 55,
    "kind": "function",
    "name": "testLoggedIn",
    "memberof": "src/guard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/guard.js~testLoggedIn",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/guard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "wantLoggedIn",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "boolean"
      ]
    }
  },
  {
    "__docId__": 56,
    "kind": "function",
    "name": "permitted",
    "memberof": "src/guard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/guard.js~permitted",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/guard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 17,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "expr",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 57,
    "kind": "function",
    "name": "guard",
    "memberof": "src/guard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/guard.js~guard",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/guard.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 26,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "store",
        "types": [
          "*"
        ]
      },
      {
        "name": "forbiddenUrl",
        "types": [
          "*"
        ]
      },
      {
        "name": "expr",
        "optional": true,
        "types": [
          "{}"
        ],
        "defaultRaw": {},
        "defaultValue": "{}"
      },
      {
        "name": "routeState",
        "types": [
          "*"
        ]
      },
      {
        "name": "replace",
        "types": [
          "*"
        ]
      },
      {
        "name": "callback",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 58,
    "kind": "function",
    "name": "createGuard",
    "memberof": "src/guard.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/guard.js~createGuard",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/guard.js",
    "importStyle": "{createGuard}",
    "description": "creates a guard function you can use in <Route> tags",
    "lineNumber": 47,
    "unknown": [
      {
        "tagName": "@returns",
        "tagValue": "{function} - a function that can be provided to onEnter"
      }
    ],
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "store",
        "description": "the redux store"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "forbiddenUrl",
        "description": "the default url to navigate to if forbidden"
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "function"
      ],
      "spread": false,
      "description": "a function that can be provided to onEnter"
    }
  },
  {
    "__docId__": 59,
    "kind": "file",
    "name": "src/index.js",
    "content": "export * from './reducers';\nexport * from './actions';\nexport * from './states';\nexport * from './utils';\nexport * from './guard';\nexport * from './auth';\nexport * from './attributes';\nexport * from './policy';\n\n\nexport * from './Login.jsx';\nexport * from './Logout.jsx';\nexport * from './NewPasswordRequired.jsx';\nexport * from './EmailVerification.jsx';\nexport * from './PasswordReset.jsx';\nexport * from './Confirm.jsx';\n",
    "static": true,
    "longname": "src/index.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 60,
    "kind": "file",
    "name": "src/policy.js",
    "content": "import { Action } from './actions';\nimport { getUserAttributes } from './attributes';\nimport { emailVerificationFlow, performLogin } from './auth';\nimport { CognitoState } from './states';\n\n/**\n * subscribes a \"policy\" function to the store, and calls it\n * with the state and the dispatch function\n * @param {object} store - the redux store\n * @param {function} f - f(state, dispatch)\n*/\nconst enable = (store, f) => {\n  store.subscribe(() => {\n    const state = store.getState();\n    const dispatch = store.dispatch;\n    f(state, dispatch);\n  });\n};\n\n/**\n * requires email verification before transitioning from AUTHENTICATED\n * @param {object} state - the redux store state\n * @param {function} dispatch - the dispatch function\n*/\nconst emailVerificationRequired = (state, dispatch) => {\n  if (state.cognito.state === CognitoState.AUTHENTICATED) {\n    const user = state.cognito.user;\n    getUserAttributes(user).then((attributes) => {\n      if (attributes.email_verified !== 'true') {\n        emailVerificationFlow(user, attributes).then(dispatch);\n      } else {\n        dispatch(Action.loggingIn(attributes));\n      }\n    });\n  }\n};\n\n/**\n * fetches and stores attributes before transitioning from AUTHENTICATED\n * @param {object} state - the redux store state\n * @param {function} dispatch - the dispatch function\n*/\nconst fetchAttributes = (state, dispatch) => {\n  if (state.cognito.state === CognitoState.AUTHENTICATED) {\n    const user = state.cognito.user;\n    getUserAttributes(user).then((attributes) => {\n      dispatch(Action.loggingIn(attributes));\n    });\n  }\n};\n\n/**\n * transitions directly from AUTHENTICATED to LOGGING_IN\n * @param {object} state - the redux store state\n * @param {function} dispatch - the dispatch function\n*/\nconst direct = (state, dispatch) => {\n  if (state.cognito.state === CognitoState.AUTHENTICATED) {\n    dispatch(Action.loggingIn());\n  }\n};\n\n/**\n * logs into the single federated identity pool to transition from LOGGING_IN\n * to LOGGED_IN\n * @param {object} state - the redux store state\n * @param {function} dispatch - the dispatch function\n*/\nconst identityPoolLogin = (state, dispatch) => {\n  if (state.cognito.state === CognitoState.LOGGING_IN) {\n    performLogin(state.cognito.user, state.cognito.config).then(dispatch);\n  }\n};\n\n/**\n * sets up react-cognito with default policies.\n*/\nconst setupCognito = (store, config) => {\n  store.dispatch(Action.configure(config));\n  enable(store, emailVerificationRequired);\n  enable(store, identityPoolLogin);\n};\n\nexport {\n  setupCognito,\n  enable,\n  direct,\n  fetchAttributes,\n  emailVerificationRequired,\n  identityPoolLogin,\n};\n",
    "static": true,
    "longname": "src/policy.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 61,
    "kind": "function",
    "name": "setupCognito",
    "memberof": "src/policy.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/policy.js~setupCognito",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/policy.js",
    "importStyle": "{setupCognito}",
    "description": "sets up react-cognito with default policies.",
    "lineNumber": 78,
    "params": [
      {
        "name": "store",
        "types": [
          "*"
        ]
      },
      {
        "name": "config",
        "types": [
          "*"
        ]
      }
    ]
  },
  {
    "__docId__": 62,
    "kind": "function",
    "name": "enable",
    "memberof": "src/policy.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/policy.js~enable",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/policy.js",
    "importStyle": "{enable}",
    "description": "subscribes a \"policy\" function to the store, and calls it\nwith the state and the dispatch function",
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "store",
        "description": "the redux store"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "f",
        "description": "f(state, dispatch)"
      }
    ]
  },
  {
    "__docId__": 63,
    "kind": "function",
    "name": "direct",
    "memberof": "src/policy.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/policy.js~direct",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/policy.js",
    "importStyle": "{direct}",
    "description": "transitions directly from AUTHENTICATED to LOGGING_IN",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "the redux store state"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "the dispatch function"
      }
    ]
  },
  {
    "__docId__": 64,
    "kind": "function",
    "name": "fetchAttributes",
    "memberof": "src/policy.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/policy.js~fetchAttributes",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/policy.js",
    "importStyle": "{fetchAttributes}",
    "description": "fetches and stores attributes before transitioning from AUTHENTICATED",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "the redux store state"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "the dispatch function"
      }
    ]
  },
  {
    "__docId__": 65,
    "kind": "function",
    "name": "emailVerificationRequired",
    "memberof": "src/policy.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/policy.js~emailVerificationRequired",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/policy.js",
    "importStyle": "{emailVerificationRequired}",
    "description": "requires email verification before transitioning from AUTHENTICATED",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "the redux store state"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "the dispatch function"
      }
    ]
  },
  {
    "__docId__": 66,
    "kind": "function",
    "name": "identityPoolLogin",
    "memberof": "src/policy.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/policy.js~identityPoolLogin",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/policy.js",
    "importStyle": "{identityPoolLogin}",
    "description": "logs into the single federated identity pool to transition from LOGGING_IN\nto LOGGED_IN",
    "lineNumber": 69,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": "the redux store state"
      },
      {
        "nullable": null,
        "types": [
          "function"
        ],
        "spread": false,
        "optional": false,
        "name": "dispatch",
        "description": "the dispatch function"
      }
    ]
  },
  {
    "__docId__": 67,
    "kind": "file",
    "name": "src/reducers.js",
    "content": "import { CognitoUserPool } from 'amazon-cognito-identity-js';\nimport { CognitoState } from './states';\n\n/* global AWSCognito */\n\nconst initial = {\n  user: null,\n  state: CognitoState.LOGGED_OUT,\n  error: '',\n  userPool: null,\n  attributes: {},\n  creds: null,\n  config: {\n    region: null,\n    userPool: null,\n    clientId: null,\n    identityPool: null,\n  },\n};\n\nconst configure = (state, action) => {\n  // surprise side-effect!\n  AWSCognito.config.region = action.config.region;\n  const pool = new CognitoUserPool({\n    UserPoolId: action.config.userPool,\n    ClientId: action.config.clientId,\n  });\n  const user = pool.getCurrentUser();\n  return Object.assign({}, state, {\n    config: action.config,\n    userPool: pool,\n    user,\n  });\n};\n\n// sometimes we don't get the attributes in later parts of the login flow\n// but lets not clobber the ones we've got if we've not got them\nconst addAttributes = (s, attributes) => {\n  const s2 = Object.assign({}, s);\n  if (attributes) {\n    s2.attributes = attributes;\n  }\n  return s2;\n};\n\n/**\n * reducer function to be passed to redux combineReducers\n * @param {object} state\n * @param {object} action\n*/\n\nexport const cognito = (state = initial, action) => {\n  switch (action.type) {\n\n    case 'COGNITO_CONFIGURE':\n      return configure(state, action);\n\n    case 'COGNITO_AUTHENTICATED':\n      return Object.assign({}, state, {\n        user: action.user,\n        error: '',\n        state: CognitoState.AUTHENTICATED,\n      });\n\n    case 'COGNITO_LOGGING_IN':\n      return Object.assign({}, state, {\n        state: CognitoState.LOGGING_IN,\n        attributes: action.attributes,\n      });\n\n    case 'COGNITO_LOGIN':\n      return Object.assign({}, state, addAttributes({\n        error: '',\n        creds: action.creds,\n        state: CognitoState.LOGGED_IN,\n      }, action.attributes));\n\n    case 'COGNITO_LOGOUT':\n      return Object.assign({}, state, {\n        user: null,\n        error: '',\n        creds: null,\n        state: CognitoState.LOGGED_OUT,\n      });\n\n    case 'COGNITO_LOGIN_FAILURE':\n      return Object.assign({}, state, {\n        user: action.user,\n        state: CognitoState.LOGGED_OUT,\n        error: action.error,\n      });\n\n    case 'COGNITO_LOGIN_MFA_REQUIRED':\n      return Object.assign({}, state, {\n        user: action.user,\n        error: '',\n        state: CognitoState.MFA_REQUIRED,\n      });\n\n    case 'COGNITO_LOGIN_NEW_PASSWORD_REQUIRED':\n      return Object.assign({}, state, {\n        user: action.user,\n        error: '',\n        state: CognitoState.NEW_PASSWORD_REQUIRED,\n      });\n\n    case 'COGNITO_USER_UNCONFIRMED':\n      return Object.assign({}, state, {\n        user: action.user,\n        state: CognitoState.CONFIRMATION_REQUIRED,\n        error: action.error,\n      });\n\n    case 'COGNITO_NEW_PASSWORD_REQUIRED_FAILURE':\n      return Object.assign({}, state, {\n        error: action.error,\n        state: CognitoState.NEW_PASSWORD_REQUIRED,\n      });\n\n    case 'COGNITO_EMAIL_VERIFICATION_REQUIRED':\n      return Object.assign({}, state, addAttributes({\n        error: '',\n        state: CognitoState.EMAIL_VERIFICATION_REQUIRED,\n      }, action.attributes));\n\n    case 'COGNITO_EMAIL_VERIFICATION_FAILED':\n      return Object.assign({}, state, addAttributes({\n        error: action.error,\n        state: CognitoState.EMAIL_VERIFICATION_REQUIRED,\n      }, action.attributes));\n\n    case 'COGNITO_BEGIN_PASSWORD_RESET_FLOW':\n      return Object.assign({}, state, {\n        error: action.error,\n      });\n\n    case 'COGNITO_FINISH_PASSWORD_RESET_FLOW':\n      return Object.assign({}, state, {\n        error: action.error,\n      });\n\n    // this moves us into the AUTHENTICATED state, potentially causing\n    // a number of side-effects. this is so we can re-verify the email\n    // address if we have to\n    case 'COGNITO_UPDATE_USER_ATTRIBUTES':\n      return Object.assign({}, state, {\n        attributes: Object.assign({}, state.attributes, action.attributes),\n        state: CognitoState.AUTHENTICATED,\n      });\n\n    default:\n      return state;\n  }\n};\n",
    "static": true,
    "longname": "src/reducers.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 68,
    "kind": "variable",
    "name": "initial",
    "memberof": "src/reducers.js",
    "static": true,
    "longname": "src/reducers.js~initial",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/reducers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 6,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "type": {
      "types": [
        "{\"user\": *, \"state\": *, \"error\": *, \"userPool\": *, \"attributes\": *, \"creds\": *, \"config\": *}"
      ]
    }
  },
  {
    "__docId__": 69,
    "kind": "function",
    "name": "configure",
    "memberof": "src/reducers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers.js~configure",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/reducers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 21,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "state",
        "types": [
          "*"
        ]
      },
      {
        "name": "action",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 70,
    "kind": "function",
    "name": "addAttributes",
    "memberof": "src/reducers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers.js~addAttributes",
    "access": null,
    "export": false,
    "importPath": "@isotoma/react-cognito/src/reducers.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 38,
    "undocument": true,
    "unknown": [
      {
        "tagName": "@_undocument",
        "tagValue": ""
      }
    ],
    "params": [
      {
        "name": "s",
        "types": [
          "*"
        ]
      },
      {
        "name": "attributes",
        "types": [
          "*"
        ]
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 71,
    "kind": "function",
    "name": "cognito",
    "memberof": "src/reducers.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/reducers.js~cognito",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/reducers.js",
    "importStyle": "{cognito}",
    "description": "reducer function to be passed to redux combineReducers",
    "lineNumber": 52,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "state",
        "description": ""
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "action",
        "description": ""
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 72,
    "kind": "file",
    "name": "src/states.js",
    "content": "\n/** states stored in store.cognito.state */\nexport const CognitoState = {\n  LOGGED_OUT: 'LOGGED_OUT',\n  AUTHENTICATED: 'AUTHENTICATED',\n  LOGGING_IN: 'LOGGING_IN',\n  LOGGED_IN: 'LOGGED_IN',\n  NEW_PASSWORD_REQUIRED: 'NEW_PASSWORD_REQUIRED',\n  MFA_REQUIRED: 'MFA_REQUIRED',\n  EMAIL_VERIFICATION_REQUIRED: 'EMAIL_VERIFICATION_REQUIRED',\n  CONFIRMATION_REQUIRED: 'CONFIRMATION_REQUIRED',\n};\n\n",
    "static": true,
    "longname": "src/states.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "CognitoState",
    "memberof": "src/states.js",
    "static": true,
    "longname": "src/states.js~CognitoState",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/states.js",
    "importStyle": "{CognitoState}",
    "description": "states stored in store.cognito.state",
    "lineNumber": 3,
    "type": {
      "types": [
        "{\"LOGGED_OUT\": string, \"AUTHENTICATED\": string, \"LOGGING_IN\": string, \"LOGGED_IN\": string, \"NEW_PASSWORD_REQUIRED\": string, \"MFA_REQUIRED\": string, \"EMAIL_VERIFICATION_REQUIRED\": string, \"CONFIRMATION_REQUIRED\": string}"
      ]
    }
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "src/utils.js",
    "content": "\n/**\n * Change a user's password\n * @param {object} user - the cognito user object\n * @param {string} oldPassword - the current password\n * @param {string} newPassword - the new password\n*/\nconst changePassword = (user, oldPassword, newPassword) =>\n  new Promise((resolve, reject) =>\n    user.changePassword(oldPassword, newPassword, (err, result) => {\n      if (err) {\n        reject(err.message);\n      } else {\n        resolve(result);\n      }\n    }));\n\n/**\n * builds the federated identity pool login structure\n * @param {string} username - the username of the user\n * @param {string} jwtToken - a JWT Token from the session\n * @param {object} config - the cognito react config object\n*/\nconst buildLogins = (username, jwtToken, config) => {\n  const loginDomain = `cognito-idp.${config.region}.amazonaws.com`;\n  const loginUrl = `${loginDomain}/${config.userPool}`;\n  const creds = {\n    IdentityPoolId: config.identityPool,\n    Logins: {},\n    LoginId: username, // https://github.com/aws/aws-sdk-js/issues/609\n  };\n  creds.Logins[loginUrl] = jwtToken;\n  return creds;\n};\n\nexport {\n  changePassword,\n  buildLogins,\n};\n",
    "static": true,
    "longname": "src/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "function",
    "name": "changePassword",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~changePassword",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/utils.js",
    "importStyle": "{changePassword}",
    "description": "Change a user's password",
    "lineNumber": 8,
    "params": [
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "user",
        "description": "the cognito user object"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "oldPassword",
        "description": "the current password"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "newPassword",
        "description": "the new password"
      }
    ]
  },
  {
    "__docId__": 76,
    "kind": "function",
    "name": "buildLogins",
    "memberof": "src/utils.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/utils.js~buildLogins",
    "access": null,
    "export": true,
    "importPath": "@isotoma/react-cognito/src/utils.js",
    "importStyle": "{buildLogins}",
    "description": "builds the federated identity pool login structure",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "username",
        "description": "the username of the user"
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "jwtToken",
        "description": "a JWT Token from the session"
      },
      {
        "nullable": null,
        "types": [
          "object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "the cognito react config object"
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 78,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Infinity",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 79,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~NaN",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 80,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~undefined",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 81,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~null",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 82,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 83,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~object",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 84,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 85,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~function",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 86,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 87,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~boolean",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 88,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Symbol",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 89,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Error",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 90,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~EvalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 91,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~InternalError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 92,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RangeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 93,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ReferenceError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 94,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~SyntaxError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 95,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~TypeError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 96,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~URIError",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 97,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 98,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~number",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 99,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Date",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 100,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~String",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 101,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~string",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 102,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~RegExp",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 103,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 104,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 105,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 106,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint8ClampedArray",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 107,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 108,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint16Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 109,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Int32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 110,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Uint32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 111,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float32Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 112,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Float64Array",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 113,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Map",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 114,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Set",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 115,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakMap",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 116,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~WeakSet",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 117,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~ArrayBuffer",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 118,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~DataView",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 119,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~JSON",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 120,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Promise",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 121,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Generator",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 122,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~GeneratorFunction",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 123,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Reflect",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 124,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "BuiltinExternal/ECMAScriptExternal.js",
    "static": true,
    "longname": "BuiltinExternal/ECMAScriptExternal.js~Proxy",
    "access": null,
    "description": "",
    "lineNumber": 193,
    "builtinExternal": true
  },
  {
    "__docId__": 126,
    "kind": "external",
    "name": "CanvasRenderingContext2D",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~CanvasRenderingContext2D",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 127,
    "kind": "external",
    "name": "DocumentFragment",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~DocumentFragment",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 128,
    "kind": "external",
    "name": "Element",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Element",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Element",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 129,
    "kind": "external",
    "name": "Event",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Event",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Event",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 130,
    "kind": "external",
    "name": "Node",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/Node",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~Node",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 131,
    "kind": "external",
    "name": "NodeList",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/API/NodeList",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~NodeList",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 132,
    "kind": "external",
    "name": "XMLHttpRequest",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/XMLHttpRequest",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~XMLHttpRequest",
    "access": null,
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 133,
    "kind": "external",
    "name": "AudioContext",
    "externalLink": "https://developer.mozilla.org/en/docs/Web/API/AudioContext",
    "memberof": "BuiltinExternal/WebAPIExternal.js",
    "static": true,
    "longname": "BuiltinExternal/WebAPIExternal.js~AudioContext",
    "access": null,
    "description": "",
    "lineNumber": 34,
    "builtinExternal": true
  },
  {
    "__docId__": 134,
    "kind": "testFile",
    "name": "test/attributes.js",
    "content": "import chai from 'chai';\nimport chaiAsPromised from 'chai-as-promised';\nimport {\n  sendAttributeVerificationCode,\n} from '../src/attributes';\n\nchai.use(chaiAsPromised);\nconst expect = chai.expect;\n\n/** @test {sendAttributeVerificationCode} */\ndescribe('sendAttributeVerificationCode', () => {\n  /** @test {sendAttributeVerificationCode#test success} */\n  it('should return false on success', () => {\n    const u = {\n      getAttributeVerificationCode: (a, f) => f.onSuccess(),\n    };\n    return expect(sendAttributeVerificationCode(u, '')).to.eventually.equal(false);\n  });\n});\n",
    "static": true,
    "longname": "test/attributes.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 135,
    "kind": "testDescribe",
    "name": "describe0",
    "testId": 0,
    "memberof": "test/attributes.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/attributes.js~describe0",
    "access": null,
    "description": "sendAttributeVerificationCode",
    "lineNumber": 11,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{sendAttributeVerificationCode}"
      }
    ],
    "testTargets": [
      "sendAttributeVerificationCode"
    ]
  },
  {
    "__docId__": 136,
    "kind": "testIt",
    "name": "it1",
    "testId": 1,
    "memberof": "test/attributes.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/attributes.js~describe0.it1",
    "access": null,
    "description": "should return false on success",
    "lineNumber": 13,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{sendAttributeVerificationCode#test success}"
      }
    ],
    "testTargets": [
      "sendAttributeVerificationCode#test success"
    ]
  },
  {
    "__docId__": 137,
    "kind": "testFile",
    "name": "test/auth.js",
    "content": "import chai from 'chai';\nimport chaiAsPromised from 'chai-as-promised';\nimport sinon from 'sinon';\nimport assert from 'assert';\nimport { CognitoUser } from 'amazon-cognito-identity-js';\nimport { CognitoIdentityCredentials } from 'aws-cognito-sdk';\nimport {\n  authenticate,\n  performLogin,\n} from '../src/auth';\n\nchai.use(chaiAsPromised);\nconst expect = chai.expect;\n\nsinon.stub(CognitoIdentityCredentials.prototype, 'refresh', function f(callback) {\n  const username = this.params.LoginId;\n  switch (username) {\n    case 'identity-pool-failure':\n      callback('bad refresh in test');\n      break;\n    case 'success':\n    case 'email-verification-required':\n      callback();\n      break;\n    default:\n      assert(false, 'unrecognised username in credentials refresh');\n  }\n});\n\nconst mockSession = {\n  getIdToken: () => ({\n    getJwtToken: () => 'jwt_token',\n  }),\n};\n\nsinon.stub(CognitoUser.prototype, 'getAttributeVerificationCode', (attribute, callbacks) =>\n  callbacks.inputVerificationCode(),\n);\n\nsinon.stub(CognitoUser.prototype, 'getUserAttributes', function f(callback) {\n  const verified = this.username === 'email-verification-required' ? 'false' : 'true';\n  callback(undefined, [{\n    getName: () => 'email_verified',\n    getValue: () => verified,\n  }]);\n});\n\nsinon.stub(CognitoUser.prototype, 'getSession', function f(callback) {\n  switch (this.username) {\n    case 'session-error':\n      callback(true, null);\n      break;\n    case 'success':\n    case 'email-verification-required':\n      callback(false, mockSession);\n      break;\n    default:\n      assert(false, 'unrecognised username in getSession stub');\n  }\n});\n\nsinon.stub(CognitoUser.prototype, 'authenticateUser', (creds, f) => {\n  switch (creds.username) {\n    case 'success':\n    case 'session-error':\n    case 'email-verification-required':\n      f.onSuccess();\n      break;\n    case 'failure-bad-creds':\n      f.onFailure({ code: 'NotAuthorizedException' });\n      break;\n    case 'failure-not-confirmed':\n      f.onFailure({ code: 'UserNotConfirmedException' });\n      break;\n    case 'mfa':\n      f.mfaRequired();\n      break;\n    case 'newpass':\n      f.newPasswordRequired();\n      break;\n    default:\n      assert(false, 'unrecognised username in authenticateUser stub');\n      break;\n  }\n});\n\ndescribe('performLogin', () => {\n  it('should return loginFailure action when session error', () => {\n    const user = new CognitoUser({\n      Username: 'session-error',\n      Pool: {},\n    });\n    expect(performLogin(user, {}))\n    .to.eventually.have.property('type')\n    .to.equal('COGNITO_LOGIN_FAILURE');\n  });\n});\n\n/** @test {authenticate} */\n// cannot stub performLogin, and useful to test entire orchestration\ndescribe('authenticate', () => {\n  const pool = {};\n  const a = username => authenticate(username, '', pool, {});\n\n  it('should return an authenticated action on success', () =>\n    expect(a('success'))\n    .to.eventually.have.property('type')\n    .to.equal('COGNITO_AUTHENTICATED'));\n\n  /** @test {authenticate#failed passwords} */\n  it('should return a loginFailure action for failed passwords', () =>\n    expect(a('failure-bad-creds'))\n    .to.eventually.have.property('type')\n    .to.equal('COGNITO_LOGIN_FAILURE'));\n\n  /** @test {authenticate#not confirmed} */\n  it('should return a confirmationRequired action when not confirmed', () =>\n    expect(a('failure-not-confirmed'))\n    .to.eventually.have.property('type')\n    .to.equal('COGNITO_USER_UNCONFIRMED'));\n\n  it('should return an mfaRequired action when MFA is required', () =>\n    expect(a('mfa'))\n    .to.eventually.have.property('type')\n    .to.equal('COGNITO_LOGIN_MFA_REQUIRED'));\n\n  it('should return newPasswordRequired action when new password is required', () =>\n    expect(a('newpass'))\n    .to.eventually.have.property('type')\n    .to.equal('COGNITO_LOGIN_NEW_PASSWORD_REQUIRED'));\n});\n",
    "static": true,
    "longname": "test/auth.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 138,
    "kind": "testDescribe",
    "name": "describe2",
    "testId": 2,
    "memberof": "test/auth.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/auth.js~describe2",
    "access": null,
    "description": "performLogin",
    "lineNumber": 87
  },
  {
    "__docId__": 139,
    "kind": "testIt",
    "name": "it3",
    "testId": 3,
    "memberof": "test/auth.js~describe2",
    "testDepth": 1,
    "static": true,
    "longname": "test/auth.js~describe2.it3",
    "access": null,
    "description": "should return loginFailure action when session error",
    "lineNumber": 88
  },
  {
    "__docId__": 140,
    "kind": "testDescribe",
    "name": "describe4",
    "testId": 4,
    "memberof": "test/auth.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/auth.js~describe4",
    "access": null,
    "description": "authenticate",
    "lineNumber": 101
  },
  {
    "__docId__": 141,
    "kind": "testIt",
    "name": "it5",
    "testId": 5,
    "memberof": "test/auth.js~describe4",
    "testDepth": 1,
    "static": true,
    "longname": "test/auth.js~describe4.it5",
    "access": null,
    "description": "should return an authenticated action on success",
    "lineNumber": 105
  },
  {
    "__docId__": 142,
    "kind": "testIt",
    "name": "it6",
    "testId": 6,
    "memberof": "test/auth.js~describe4",
    "testDepth": 1,
    "static": true,
    "longname": "test/auth.js~describe4.it6",
    "access": null,
    "description": "should return a loginFailure action for failed passwords",
    "lineNumber": 111,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{authenticate#failed passwords}"
      }
    ],
    "testTargets": [
      "authenticate#failed passwords"
    ]
  },
  {
    "__docId__": 143,
    "kind": "testIt",
    "name": "it7",
    "testId": 7,
    "memberof": "test/auth.js~describe4",
    "testDepth": 1,
    "static": true,
    "longname": "test/auth.js~describe4.it7",
    "access": null,
    "description": "should return a confirmationRequired action when not confirmed",
    "lineNumber": 117,
    "unknown": [
      {
        "tagName": "@test",
        "tagValue": "{authenticate#not confirmed}"
      }
    ],
    "testTargets": [
      "authenticate#not confirmed"
    ]
  },
  {
    "__docId__": 144,
    "kind": "testIt",
    "name": "it8",
    "testId": 8,
    "memberof": "test/auth.js~describe4",
    "testDepth": 1,
    "static": true,
    "longname": "test/auth.js~describe4.it8",
    "access": null,
    "description": "should return an mfaRequired action when MFA is required",
    "lineNumber": 122
  },
  {
    "__docId__": 145,
    "kind": "testIt",
    "name": "it9",
    "testId": 9,
    "memberof": "test/auth.js~describe4",
    "testDepth": 1,
    "static": true,
    "longname": "test/auth.js~describe4.it9",
    "access": null,
    "description": "should return newPasswordRequired action when new password is required",
    "lineNumber": 127
  },
  {
    "__docId__": 146,
    "kind": "testFile",
    "name": "test/utils.js",
    "content": "import chai from 'chai';\nimport chaiAsPromised from 'chai-as-promised';\nimport {\n} from '../src/utils';\n\nchai.use(chaiAsPromised);\nconst expect = chai.expect;\n",
    "static": true,
    "longname": "test/utils.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  }
]